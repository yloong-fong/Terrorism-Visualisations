setwd("~/Documents/GitHub/Group_KZ_Terrorism")
setwd("~/Documents/GitHub/Terrorism-Visualisations")
setwd("~/Documents/GitHub/yloong-fong.github.io")
require(rgdal)
require(leaflet)
require(dplyr)
require(plyr)
require(magrittr)
require(RColorBrewer)
require(stringr)
require(igraph)
require(psych)
require(knitr)
require(ggplot2)
require(ggpubr)
require(ggthemes)
require(ggrepel)
require(ggnetwork)
require(igraph)
require(intergraph)
require(extrafont)
loadfonts()
library(readxl)
terror <- read_excel("PPT-US_0517dist.xlsx")
#View(terror)
terror <- terror[c("DOM_I","PHIL")]
attach(terror)
terror$IDEO[DOM_I == 1] <- "Extreme Right Wing"
terror$IDEO[DOM_I == 2] <- "Extreme Left Wing"
terror$IDEO[DOM_I == 3] <- "Religious"
terror$IDEO[DOM_I == 4] <- "Ethno-nationalist/Separatist"
terror$IDEO[DOM_I == 5] <- "Single Issue"
terror$IDEO[DOM_I == -99] <- "Uncertain"
detach(terror)
terror = terror[!terror$DOM_I == -99,]
#subset by ideologies
right = terror[terror$DOM_I == 1,]
left = terror[terror$DOM_I == 2,]
relig = terror[terror$DOM_I == 3,]
ethno = terror[terror$DOM_I == 4,]
single = terror[terror$DOM_I == 5,]
# using text analysis
library(tm)
library(stringr)
right_text <- data.frame(doc_id=right$DOM_I, text=right$PHIL, stringsAsFactors = FALSE)
df_source_right <- DataframeSource(right_text)
tm_right <- VCorpus(df_source_right)
# our custom vector of stop words
my_custom_stopwords <- c("group", "philosophical", "movement", "ideological", "philosophically", "philosophy", "philosophies")
tm2_right <- tm_map(tm_right, content_transformer(tolower))
tm2_right <- tm_map(tm2_right, removePunctuation)
tm2_right <- tm_map(tm2_right, removeWords, c(stopwords("en")))
tm2_right <- tm_map(tm2_right, removeWords, my_custom_stopwords)
tm2_right <- tm_map(tm2_right, removeNumbers)
removeNumPunct <- function(x){gsub("[^[:alpha:][:space:]]*", "", x)}
tm2_right <- tm_map(tm2_right, content_transformer(removeNumPunct))
tm2_right <- tm_map(tm2_right, stripWhitespace)
# stemming
library(SnowballC)
# Stem all words
tm_stemmed_right <- tm_map(tm2_right, stemDocument)
# Stem completion
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
tm_all_right <- lapply(tm_stemmed_right, stemCompletion2,
dictionary=tm2_right)
tm_right <- VCorpus(VectorSource(tm_all_right))
library(tm)
dtm_right<-DocumentTermMatrix(tm_right)
library(tidytext)
sotu_td_right <- tidy(dtm_right)
sotu_tf_idf_right <-  sotu_td_right %>%
bind_tf_idf(term, document, count) %>%
arrange(desc(tf_idf))
# top 300 words using count
top_words_right <- sotu_tf_idf_right %>%
group_by(term) %>%
summarise(n = sum(count)) %>%
top_n(n = 300, wt = n)  %>%
ungroup() %>%
mutate(term = reorder(term, n))
View(sotu_tf_idf_right)
top_words_right <- sotu_tf_idf_right %>%
group_by(term) %>%
summarise(n = sum(count))
View(top_words_right)
library(dplyr)
library(knitr)
terror <- read_excel("PPT-US_0517dist.xlsx")
library(dplyr)
library(knitr)
library(readxl)
terror <- read_excel("PPT-US_0517dist.xlsx")
#View(terror)
terror <- terror[c("DOM_I","PHIL")]
attach(terror)
terror$IDEO[DOM_I == 1] <- "Extreme Right Wing"
terror$IDEO[DOM_I == 2] <- "Extreme Left Wing"
terror$IDEO[DOM_I == 3] <- "Religious"
terror$IDEO[DOM_I == 4] <- "Ethno-nationalist/Separatist"
terror$IDEO[DOM_I == 5] <- "Single Issue"
terror$IDEO[DOM_I == -99] <- "Uncertain"
detach(terror)
terror = terror[!terror$DOM_I == -99,]
#subset by ideologies
right = terror[terror$DOM_I == 1,]
left = terror[terror$DOM_I == 2,]
relig = terror[terror$DOM_I == 3,]
ethno = terror[terror$DOM_I == 4,]
single = terror[terror$DOM_I == 5,]
# using text analysis
library(tm)
library(stringr)
right_text <- data.frame(doc_id=right$DOM_I, text=right$PHIL, stringsAsFactors = FALSE)
df_source_right <- DataframeSource(right_text)
tm_right <- VCorpus(df_source_right)
# our custom vector of stop words
my_custom_stopwords <- c("group", "philosophical", "movement", "ideological", "philosophically", "philosophy", "philosophies")
tm2_right <- tm_map(tm_right, content_transformer(tolower))
tm2_right <- tm_map(tm2_right, removePunctuation)
tm2_right <- tm_map(tm2_right, removeWords, c(stopwords("en")))
tm2_right <- tm_map(tm2_right, removeWords, my_custom_stopwords)
tm2_right <- tm_map(tm2_right, removeNumbers)
removeNumPunct <- function(x){gsub("[^[:alpha:][:space:]]*", "", x)}
tm2_right <- tm_map(tm2_right, content_transformer(removeNumPunct))
tm2_right <- tm_map(tm2_right, stripWhitespace)
# stemming
library(SnowballC)
# Stem all words
tm_stemmed_right <- tm_map(tm2_right, stemDocument)
# Stem completion
stemCompletion2 <- function(x, dictionary) {
x <- unlist(strsplit(as.character(x), " "))
x <- x[x != ""]
x <- stemCompletion(x, dictionary=dictionary)
x <- paste(x, sep="", collapse=" ")
PlainTextDocument(stripWhitespace(x))
}
tm_all_right <- lapply(tm_stemmed_right, stemCompletion2,
dictionary=tm2_right)
tm_right <- VCorpus(VectorSource(tm_all_right))
library(tm)
dtm_right<-DocumentTermMatrix(tm_right)
library(tidytext)
sotu_td_right <- tidy(dtm_right)
sotu_tf_idf_right <-  sotu_td_right %>%
bind_tf_idf(term, document, count) %>%
arrange(desc(tf_idf))
# top 300 words using count
top_words_right <- sotu_tf_idf_right %>%
group_by(term) %>%
summarise(n = sum(count)) %>%
top_n(n = 300, wt = n)  %>%
ungroup() %>%
mutate(term = reorder(term, n))
# Load wordcloud package
library(wordcloud)
# Set seed - to make your word cloud reproducible
set.seed(1)
# Create purple_gradient
blue_gradient <- brewer.pal(10, "Blues")
# Drop 2 faintest colors
blue_gradient <- blue_gradient[-(1:2)]
#STATIC NETWORK
require(rgdal)
require(leaflet)
require(dplyr)
require(plyr)
require(magrittr)
require(RColorBrewer)
require(stringr)
require(igraph)
require(psych)
require(knitr)
require(ggplot2)
require(ggpubr)
require(ggthemes)
require(ggrepel)
require(ggnetwork)
require(igraph)
require(intergraph)
require(extrafont)
loadfonts()
data <- read.csv("Terrorist selected variables.csv")
data <- data[,c(1:41)]
data$ORGNAME <- gsub("\\s*\\([^\\)]+\\)","",as.character(data$ORGNAME))
data$DOM_I<- as.factor(data$DOM_I)
data$DOM_I<- revalue(data$DOM_I, c("1"="Right-Wing", "2"="Left-Wing", "3"="Religious", "4"="Ethno-nationalist", "5"="Single Issue", "-99"="Unknown"))
data$DOM_I<- as.character(data$DOM_I)
data$ORGNAME<- as.character(data$ORGNAME)
full_el <- read.csv("terroristedgelist.csv")
network <- graph.data.frame(full_el)
matrix <- get.adjacency(network, sparse=FALSE)
network <- graph.adjacency(as.matrix(matrix),mode="undirected",weighted=NULL, diag = F)
igraph_el <- as.data.frame(get.edgelist(network, names=TRUE))
colnames(igraph_el) <- c("Source", "Target")
ideology_df <- as.data.frame(cbind(data$ORGNAME,as.character(data$DOM_I)))
colnames(ideology_df) <- c("ORGNAME", "DOM_I")
igraph_el <- dplyr::full_join(igraph_el, ideology_df, by = c("Source"="ORGNAME"))
colnames(igraph_el)[which(names(igraph_el) == "DOM_I")] <- "Ideology.source"
igraph_el <- dplyr::full_join(igraph_el, ideology_df, by = c("Target"="ORGNAME"))
colnames(igraph_el)[which(names(igraph_el) == "DOM_I")] <- "Ideology.target"
igraph_el$Ideology.match <- ifelse(igraph_el$Ideology.source==igraph_el$Ideology.target, 0, 1)
E(network)$Ideology.match <- igraph_el$Ideology.match
data$yearsactive <- data$USATK_LAST_YEAR-data$USATK_FIRST_YEAR + 1
data$firstdecade <- round_any(data$USATK_FIRST_YEAR, 10, f = floor)
V(network)$Ideology=as.character(data$DOM_I[match(V(network)$name,data$ORGNAME)])
V(network)$Yearsactive=data$yearsactive[match(V(network)$name,data$ORGNAME)]
V(network)$Firstdecade=as.character(data$firstdecade[match(V(network)$name,data$ORGNAME)])
set.seed(2104)
terroristnetwork_df <- ggnetwork(network, layout = "fruchtermanreingold", cell.jitter = 0.75)
terroristnetwork_df$Ideology <- factor(terroristnetwork_df$Ideology, levels = c("Right-Wing", "Left-Wing", "Religious", "Ethno-nationalist", "Single Issue"))
terroristnetwork_df$Yearsactive <- as.numeric(terroristnetwork_df$Yearsactive)
ggplot(terroristnetwork_df, aes(x, y, xend = xend, yend = yend)) + geom_edges(aes(linetype=as.factor(Ideology.match)), alpha = 1, colour="gray") + geom_nodes(aes(color=Ideology, size=Yearsactive), alpha=0.8) + geom_nodelabel_repel(aes(label = vertex.names), label.padding=0.05, size = 2.5, family="Garamond") + ggtitle('Terrorist Networks') + theme_tufte() + theme(legend.position = "bottom", legend.box = "vertical", plot.title = element_text(hjust = 0.5, face='bold', size=14), text=element_text(family="Garamond"), axis.ticks = element_blank(), axis.text = element_blank(), axis.title = element_blank()) + scale_colour_manual(values = c('blue', 'red', 'green', 'purple', 'orange')) + guides(linetype=FALSE, size=guide_legend(title="Years Active"))
#INTERACTIVE NETWORK
require(visNetwork)
nodes <- as.data.frame(cbind(V(network)$name, V(network)$Ideology, V(network)$Yearsactive))
colnames(nodes) <- c("id", "Ideology", "Years Active")
nodes$`Years Active` <- as.numeric(as.character(nodes$`Years Active`))
nodes$Ideology <- factor(nodes$Ideology, levels = c("Right-Wing", "Left-Wing", "Religious", "Ethno-nationalist", "Single Issue"))
links <- na.omit(igraph_el)
links <- links [,c(1,2,5)]
colnames(links ) <- c("from", "to", "Match")
nodes$shape <- "dot"
nodes$title <- paste("Perpetrator:",nodes$id,"<br/>","Ideology:", nodes$Ideology,"<br/>", "Years Active:", nodes$`Years Active`)
nodes$label <- nodes$id
nodes$borderWidth <- 2
nodes$size <- 8*sqrt(nodes$`Years Active`)
nodes$group <- nodes$Ideology
nodes$group <- factor(nodes$group, levels = c("Right-Wing", "Left-Wing", "Religious", "Ethno-nationalist", "Single Issue"))
nodes$color.background <- c('blue', 'red', 'green', 'purple', 'orange')[nodes$Ideology]
nodes$color.border <- "gray"
nodes$color.highlight.background <- "black"
nodes$color.highlight.border <- "black"
links$dashes <- ifelse(links$Match==0, FALSE,TRUE)
links$color <- "gray"
visNetwork(nodes, links , width="100%", height="500px", main="Terrorist Networks") %>% visInteraction(navigationButtons = TRUE) %>% visOptions(highlightNearest = TRUE, selectedBy = "Ideology") %>% visGroups(groupname = "Right-Wing", color = ('lightblue')) %>% visGroups(groupname = "Left-Wing", color = ('lightcoral')) %>% visGroups(groupname = "Religious", color = ('lightgreen')) %>% visGroups(groupname = "Ethno-nationalist", color = ('orchid')) %>% visGroups(groupname = "Single Issue", color = ('orange')) %>% visLegend(useGroups = TRUE)
library(knitr)
opts_chunk$set(fig.path="images/",
cache.path="cache/",
cache=FALSE,
echo=FALSE,
message=FALSE,
warning=FALSE)
library(readr)
ussubset <- read_csv("ussubset.csv")
library(magrittr)
library(dplyr)
# group by decade
usattacks_decade <- ussubset[c("provstate","attacktype1","attackdecade")]
# count attacks by state for each decade
attack_count_decade <- usattacks_decade %>%
dplyr::group_by(provstate, attackdecade) %>%
summarise(n = sum(attacktype1)) %>%
ungroup() %>%
mutate(provstate = reorder(provstate, n))
library(knitr)
opts_chunk$set(fig.path="images/",
cache.path="cache/",
cache=FALSE,
echo=FALSE,
message=FALSE,
warning=FALSE)
library(readr)
ussubset <- read_csv("ussubset.csv")
library(magrittr)
library(dplyr)
# group by decade
usattacks_decade <- ussubset[c("provstate","attacktype1","attackdecade")]
# count attacks by state for each decade
attack_count_decade <- usattacks_decade %>%
dplyr::group_by(provstate, attackdecade) %>%
dplyr::summarise(n = sum(attacktype1)) %>%
dplyr::ungroup() %>%
dplyr::mutate(provstate = reorder(provstate, n))
View(attack_count_decade)
read.csv(file.choose())
data <- read.csv(file.choose())
data <- read.csv(file.choose())
View(data)
summary(lm(Grade8ELAscore ~ Poverty + White + ELL + School.Pupil.Teacher.Ratio + Total.Enrollment + Female + Supportive.Environment.Score, data=data))
summary(lm(Grade8ELAscore ~ Poverty + White + ELL + School.Pupil.Teacher.Ratio + Total.Enrollment + Female + PER_FEWER_3YRS_EXP + Supportive.Environment.Score, data=data))
teachers <- read.csv(file.choose())
View(teachers)
teachers <- read.csv(file.choose())
View(teachers)
teachers <- teachers[teachers$YEAR==2017,]
teachers <- read.csv(file.choose())
teachers <- teachers[teachers$YEAR==2016,]
teachers2 <- teachers[,c("PER_NO_VALID_CERT","PER_NO_APPROP_CERT", "PER_MAS_PLUS")]
test <- merge(data, teachers2, by.x="BEDS.Number", by.y="ENTITY_CD")
teachers2 <- teachers[,c("ENTITY_CD", PER_NO_VALID_CERT","PER_NO_APPROP_CERT", "PER_MAS_PLUS")]
teachers2 <- teachers[,c("PER_NO_VALID_CERT","PER_NO_APPROP_CERT", "PER_MAS_PLUS")]
teachers2 <- teachers[,c("ENTITY_CD", "PER_NO_VALID_CERT","PER_NO_APPROP_CERT", "PER_MAS_PLUS")]
test <- merge(data, teachers2, by.x="BEDS.Number", by.y="ENTITY_CD")
summary(lm(Grade8ELAscore ~ Poverty + White + ELL + School.Pupil.Teacher.Ratio + Total.Enrollment + Female + PER_NO_VALID_CERT + Supportive.Environment.Score, data=data))
summary(lm(Grade8ELAscore ~ Poverty + White + ELL + School.Pupil.Teacher.Ratio + Total.Enrollment + Female + PER_NO_VALID_CERT + Supportive.Environment.Score, data=test))
summary(lm(Grade8ELAscore ~ Poverty + White + ELL + School.Pupil.Teacher.Ratio + Total.Enrollment + Female + PER_NO_APPROP_CERT+ Supportive.Environment.Score, data=test))
summary(lm(Grade8ELAscore ~ Poverty + White + ELL + School.Pupil.Teacher.Ratio + Total.Enrollment + Female + PER_MAS_PLUS + Supportive.Environment.Score, data=test))
